services:
  postgres:
    container_name: postgres
    image: postgres:16.1-alpine3.18
    environment:
      POSTGRES_DB: "airbnb"
      POSTGRES_USER: "airbnbsuperuser"
      POSTGRES_PASSWORD: "mycoolpassword123"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
#      - ./sql/migrate:/docker-entrypoint-initdb.d
      - reservations-data:/var/lib/postgresql/data
#      - ./postgresql.conf:/etc/postgresql.conf:ro
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U airbnbsuperuser -d airbnb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 10G
    networks:
      - postgres
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "airbnb@airbnb.cool"
      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4thrushes"
      PGADMIN_CONFIG_SERVER_MODE: "False" # To allow running in desktop mode
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./data/ProcessedData:/home/data
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres
  web:
    build: .
    command: python app.py
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    networks:
      - postgres

volumes:
  reservations-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge